
public class SieveofEratosthenes {

	public static void main(String[] args) {
		int a = myTools.userInput("upper limit to generate?", 3, 200000);
		int[] manta = new int[a - 1];
		
		populateSequential(manta, a);
		eliminate(manta);
		display(manta);
		
		int input = (int)myTools.userInput("Input a number to check: ");
		System.out.println(isPrime(manta, input));
	}
	
	public static void populateSequential(int[] array, int a) {
		for (int i = 0; i < (a - 1); i++) {
			array[i] = (2 + i); // offset
		}
	}
	
	public static void display(int[] array) { // pretty formatting :D
		for (int i = 0; i < array.length; i++) {
			
			if (array[i] < 10) {
				System.out.print(array[i] + "   ");
			} else if (array[i] < 100) {
				System.out.print(array[i] + "  ");
			} else {
				System.out.print(array[i] + " ");
			}
			
			if ((i + 1) % 10 == 0) {
				System.out.println();
			}
		}
		System.out.println();
	}
	
	public static void eliminate(int[] array) {	
		// this code has been merged into the for loop below
//		for (int i = 1; i < array.length; i++) { // take out everything divisible by 2 (even numbers)
//			if (i % 2 == 0) {
//				array[i] = 0;
//			}
//		}
		
		for (int i = 0; i < array.length; i++) {
			for (int k = 1; k < array.length; k++) {
				int first = array[i];
				int value = array[k];
				if ((first != 0) && (value != first) && (value % first == 0)) {
					array[k] = 0;
				}
			}
		}
	}
	
	public static String isPrime(int[] array, int num) {
		boolean status = false;
		for (int i = 0; i < array.length; i++) { // mm yes i love searching a 200000-number long array with a for loop
			if (array[i] == num) {
				status = true;
			}
		}
		
		if (status == true) {
			return "prime";
		} else {
			return "not prime";
		}
	}
}
